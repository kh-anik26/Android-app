name: Build Android APK

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
    - name: Checkout Code
      uses: actions/checkout@v4

    - name: Verify Workflow Start
      run: echo "GitHub Actions workflow has successfully started!"

    - name: Set up Python 3.9
      uses: actions/setup-python@v5
      with:
        python-version: '3.9'

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Setup Android SDK
      uses: android-actions/setup-android@v3

    # Ensure ANDROID_HOME is exported for all subsequent steps
    - name: Export ANDROID_HOME and add build-tools to PATH
      run: |
        echo "ANDROID_HOME=$ANDROID_HOME" >> $GITHUB_ENV
        echo "$ANDROID_HOME/build-tools/33.0.2" >> $GITHUB_PATH
        echo "$ANDROID_HOME/platform-tools" >> $GITHUB_PATH

    - name: Debug ANDROID_HOME and build-tools
      run: |
        echo "ANDROID_HOME is: $ANDROID_HOME"
        echo "Contents of $ANDROID_HOME/build-tools/33.0.2:"
        ls -la "$ANDROID_HOME/build-tools/33.0.2" || echo "build-tools dir missing"
        which aidl || echo "AIDL not found in PATH"

    - name: Install initial Android components and debug AIDL path
      run: |
        echo "Installing Android SDK components (initial pass)..."
        $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --install "cmdline-tools;latest" "build-tools;33.0.2" "platforms;android-33" "ndk;23.2.8568313" "platform-tools"
        echo "Initial AIDL verification after sdkmanager:"
        ls -la "$ANDROID_HOME/build-tools/33.0.2/aidl" || echo "AIDL file not found at expected location after initial install!"
        which aidl || echo "AIDL not found in PATH after initial install!"
        echo "Current PATH: $PATH"
      env:
        SKIP_JDK_VERSION_CHECK: true

    # Additional verification and repair for AIDL presence
    - name: Verify and fix AIDL presence
      run: |
        AIDL_PATH="$ANDROID_HOME/build-tools/33.0.2/aidl"
        if [ ! -f "$AIDL_PATH" ]; then
          echo "AIDL not found! Trying to reinstall build-tools."
          $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --install "build-tools;33.0.2"
        fi
        if [ -f "$AIDL_PATH" ]; then
          chmod +x "$AIDL_PATH"
          echo "AIDL is present and executable."
        else
          echo "AIDL is still missing!"
          exit 1
        fi

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y git zip unzip python3-pip autoconf libtool pkg-config zlib1g-dev libncurses5-dev libncursesw5-dev cmake libffi-dev libssl-dev build-essential libltdl-dev
        pip3 install --upgrade pip setuptools wheel
        pip3 install buildozer cython==0.29.33

    - name: Cache Buildozer global directory
      uses: actions/cache@v4
      with:
        path: ~/.buildozer
        key: ${{ runner.os }}-buildozer-${{ hashFiles('**/buildozer.spec') }}
        restore-keys: |
          ${{ runner.os }}-buildozer-

    - name: Cache Buildozer project cache directory
      uses: actions/cache@v4
      with:
        path: .buildozer
        key: ${{ runner.os }}-buildozer-cache-${{ hashFiles('**/buildozer.spec') }}
        restore-keys: |
          ${{ runner.os }}-buildozer-

    - name: Build with Buildozer
      run: |
        echo "Starting Buildozer build process..."

        echo "Re-installing build-tools;33.0.2 to ensure AIDL is available..."
        export JAVA_HOME=${{ env.JAVA_HOME_17_X64 }}
        $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager "build-tools;33.0.2"
        
        export JAVA_HOME=${{ env.JAVA_HOME_17_X64 }}
        export ANDROID_SDK_ROOT=$ANDROID_HOME
        export ANDROID_NDK_HOME=$ANDROID_HOME/ndk/23.2.8568313
        
        export PATH=$ANDROID_HOME/build-tools/33.0.2:$ANDROID_HOME/platform-tools:$PATH
        
        echo "Detailed AIDL verification just before buildozer command:"
        AIDL_PATH="$ANDROID_HOME/build-tools/33.0.2/aidl"
        
        if [ -f "$AIDL_PATH" ]; then
            echo "AIDL found at: $AIDL_PATH"
            if [ -x "$AIDL_PATH" ]; then
                echo "AIDL is executable."
                "$AIDL_PATH" --version || echo "Direct AIDL execution failed!"
            else
                echo "AIDL found but NOT executable. Setting permissions."
                chmod +x "$AIDL_PATH"
                "$AIDL_PATH" --version || echo "Direct AIDL execution failed after chmod!"
            fi
        else
            echo "AIDL file DOES NOT EXIST at $AIDL_PATH. This is a critical error."
            exit 1
        fi
        
        echo "PATH before buildozer execution: $PATH"
        which aidl || echo "AIDL still not found in PATH! (which command check)"
        
        yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --licenses || true
        buildozer android debug -v
      env:
        SKIP_JDK_VERSION_CHECK: true

    - name: List bin directory contents
      run: |
        echo "Listing contents of the 'bin' directory:"
        ls -la bin/ || echo "bin/ directory not found or empty."

    - name: Upload APK
      uses: actions/upload-artifact@v4
      with:
        name: android-apk
        path: bin/*.apk

    - name: Create Release
      if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
      uses: softprops/action-gh-release@v2
      with:
        tag_name: v${{ github.run_number }}
        name: Release v${{ github.run_number }}
        files: bin/*.apk
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
